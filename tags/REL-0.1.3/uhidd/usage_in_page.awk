BEGIN {
    printf("/* Generated by: awk -f usage_in_page.awk usb_hid_usages */\n\n");
    printf("const char *usage_in_page(int i, int j);\n\n");
    printf("const char *\n")
    printf("usage_in_page(int i, int j)\n")
    printf("{\n")
    printf("\tswitch(i) {\n")
    sbegin = 0;
}

/^[0-9]/{
    if (sbegin == 1) {
	printf("\t\tdefault:\n")
	printf("\t\t\treturn(\"Unknown Usage\");\n")
	printf("\t\t}\n")
	printf("\t\tbreak;\n")
    }

    sbegin = 1
    page = $2
    printf("\tcase %s:\n", $1)
    printf("\t\tswitch(j) {\n")
}

/^[[:space:]]/{
    if ($1 == "*") {
	for(i=1; i<=255; i++) {
	    printf("\t\tcase 0x%x:\n", i);
	    printf("\t\t\treturn(\"%s%d\");\n", page, i);
	}
    } else {
	printf("\t\tcase %s:\n", $1)
	str = substr($0, index($0, $2), length)
	gsub(/\\/, "\\\\", str)
	gsub("\"", "\\\"", str)
	printf("\t\t\treturn(\"%s\");\n", str);
    }
}

END {
    if (sbegin == 1) {
	printf("\t\tdefault:\n")
	printf("\t\t\treturn(\"Unknown Usage\");\n")
	printf("\t\t}\n")
	printf("\t\tbreak;\n")
    }

    printf("\tdefault:\n")
    printf("\t\treturn(\"Unknown Page\");\n")
    printf("\t}\n")
    printf("}\n")
}
